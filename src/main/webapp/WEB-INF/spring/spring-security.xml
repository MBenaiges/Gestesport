<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
            http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    
    <context:component-scan base-package="cat.gestesport.auth
                                        cat.gestesport.auth.impl
                                        cat.gestesport.config 
                                        cat.gestesport.controller 
                                        cat.gestesport.domain 
                                        cat.gestesport.repository
                                        cat.gestesport.repository.impl
                                        cat.gestesport.service
                                        cat.gestesport.service.impl" />
    
    <security:http auto-config="true" use-expressions="true" >
        <!-- We're not a real/production domain, but just testing... so, disable Cross-Site Request Forgery protection -->
        <security:csrf disabled="true"/>
        <!-- Here we setup a coarse-grained/early authorization config based on path vs authenticated user role. 
        Further fine-grained contraints/filters/control can be achieved at Spring Controller/Service/... level by seeing 
        the authenticated user details. -->
        <security:intercept-url pattern="/panellAdmin" access="hasRole('ROLE_ADMIN') or hasRole('ROLE_SUPER')"/>
        <security:intercept-url pattern="/panellResponsable" access="hasRole('ROLE_RESP') or hasRole('ROLE_SUPER')"/>
        <security:form-login login-page="/login" authentication-failure-url="/loginIncorrect" username-parameter="usuari" password-parameter="contrasenya"/>
        <security:logout logout-success-url="/" logout-url="/j_spring_security_logout"/>
    </security:http>

    <security:authentication-manager>
        <security:authentication-provider
          ref="authenticationProvider" />
    </security:authentication-manager>

</beans>